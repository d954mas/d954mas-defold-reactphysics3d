local DIRTY_LARRY = require "gooey-dirtylarry.dirtylarry"
local MONARCH = require "monarch.monarch"
local GOOEY = require "gooey.gooey"


local LISTITEM_SELECTED = hash("button_pressed")
local LISTITEM_PRESSED = hash("button_pressed")
local LISTITEM_OVER = hash("button_normal")
local LISTITEM_NORMAL = hash("button_normal")

local function update_listitem(list, item)
	local pos = gui.get_position(item.root)
	if item == list.selected_item then
		pos.x = 4
		gui.play_flipbook(item.root, LISTITEM_PRESSED)
	elseif item == list.pressed_item then
		pos.x = 1
		gui.play_flipbook(item.root, LISTITEM_SELECTED)
	elseif item == list.over_item_now then
		pos.x = 1
		gui.play_flipbook(item.root, LISTITEM_OVER)
	elseif item == list.out_item_now then
		pos.x = 0
		gui.play_flipbook(item.root, LISTITEM_NORMAL)
	elseif item ~= list.over_item then
		pos.x = 0
		gui.play_flipbook(item.root, LISTITEM_NORMAL)
	end
	gui.set_position(item.root, pos)
end

local function update_dynamic_list(list)
	for _,item in ipairs(list.items) do
		update_listitem(list, item)
		gui.set_text(item.nodes[hash(list.id .. "/listitem_text")], tostring(item.data and item.data.id or "-"))
	end
end

local function update_list(self,action_id,action,fn)
	local list_id = "list"
	GOOEY.dynamic_list(list_id, list_id .. "/stencil", list_id .. "/listitem_bg", self.list_data, action_id, action, nil, fn, update_dynamic_list)
end

local function list_on_item_selected(list)
	local data = list.data[list.selected_item]
	MONARCH.back(nil,function()
		MONARCH.replace(data.scene)
	end)
end

function init(self)
	gui.set_render_order(2)
	msg.post(".", "acquire_input_focus")
	self.list_data = {
		{id = "cubes",scene = "cubes"},
		{id = "cube stack",scene = "cube_stack"},
		{id = "box tower",scene = "box_tower"},
		{id = "convex mesh(cubes)",scene = "convex_mesh_cubes"},
		{id = "collision shapes",scene = "collision_shapes"},
		{id = "concave shape",scene = "concave_shape"}
	}
	update_list(self)

end


function final(self)
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	DIRTY_LARRY.button("btn_close", action_id, action, function()
		MONARCH.back()
	end)
	update_list(self,action_id,action,list_on_item_selected)


	return true
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
