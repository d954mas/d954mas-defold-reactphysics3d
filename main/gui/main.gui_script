local SCENE_HELPER = require "main.gui.scene_helper"
local DIRTY_LARRY = require "gooey-dirtylarry.dirtylarry"
local GOOEY = require "gooey.gooey"
local MONARCH = require "monarch.monarch"

local gui_refresh_scale = function(button)
	button.initial_scale = button.initial_scale or gui.get_scale(button.node)
	if button.pressed then
		gui.set_scale(button.node, button.initial_scale * 0.8)
	else
		gui.set_scale(button.node, button.initial_scale)
	end
end

local function reset_gui(self)
	gui.set_text(self.vh.lbl_title, tostring(SCENE_HELPER.scene_config.name))
end

function init(self)
	msg.post(".", "acquire_input_focus")
	self.vh = {
		lbl_title = gui.get_node("scene_item/text"),
		simulation = {

		},
		profiling = {
			lbl_fps = gui.get_node("menu/profiling/fps/lbl"),
			lbl_dt = gui.get_node("menu/profiling/fps/dt/lbl"),
			lbl_physics_total = gui.get_node("menu/profiling/physics_total/lbl"),
			lbl_physics_step = gui.get_node("menu/profiling/physics_step/lbl"),
		}
	}
	self.gui_functions = {
		btn_play = function() SCENE_HELPER.simulation.play = true end,
		btn_step = function()   SCENE_HELPER.simulation.step = true end,
		btn_pause = function()  SCENE_HELPER.simulation.play = false end,
		btn_restart = function() MONARCH.show(MONARCH.top(), { reload = true }) end,
		btn_profiler = function()
			self.profiler_enabled = not self.profiler_enabled
			profiler.enable_ui(self.profiler_enabled)
		end
	}
	reset_gui(self)
end

function final(self)
	msg.post(".", "release_input_focus")
end

local function update_profiling(self)
	gui.set_text(self.vh.profiling.lbl_fps, string.format("%d", SCENE_HELPER.profiling.fps))
	gui.set_text(self.vh.profiling.lbl_dt, string.format("%.2fms(max)", SCENE_HELPER.profiling.dt * 1000))
	gui.set_text(self.vh.profiling.lbl_physics_total, SCENE_HELPER.profiling.phys_total)
	gui.set_text(self.vh.profiling.lbl_physics_step, SCENE_HELPER.profiling.phys_step)
end

function update(self, dt)
	update_profiling(self)
	if (SCENE_HELPER.dirty) then
		SCENE_HELPER.dirty = false
		reset_gui(self)
	end
end

function on_message(self, message_id, message, sender)

end

function on_input(self, action_id, action)
	DIRTY_LARRY.button("btn_play", action_id, action, self.gui_functions.btn_play, gui_refresh_scale)
	DIRTY_LARRY.button("btn_restart", action_id, action, self.gui_functions.btn_restart, gui_refresh_scale)
	DIRTY_LARRY.button("btn_pause", action_id, action, self.gui_functions.btn_pause, gui_refresh_scale)
	DIRTY_LARRY.button("btn_step", action_id, action, self.gui_functions.btn_step, gui_refresh_scale)
	DIRTY_LARRY.button("btn_profiler", action_id, action, self.gui_functions.btn_profiler, gui_refresh_scale)
end

