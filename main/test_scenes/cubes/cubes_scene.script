local SCENE_HELPER = require "main.gui.scene_helper"

local Box = require "main.objects.box"

local SCENE_RADIUS = 30              -- Radius of the scene in meters
local NB_CUBES = 30                              -- Number of boxes in the scene
local BOX_SIZE = vmath.vector3(2, 2, 2)    -- Box dimensions in meters
local FLOOR_SIZE = vmath.vector3(30, 1, 30)   -- Floor dimensions in meters

local function create_physics(self)

	local settings = {
		gravity = vmath.vector3(0, -9.81, 0)
	}
	self.world = rp3d.createPhysicsWorld(settings)
	---@type GameBox[]
	self.objects = {}
	---@type GameBox[]
	self.boxes = {}

	for i=1,NB_CUBES do
		-- Create a cube and a corresponding rigid in the physics world
		--Box* cube = new Box(true, BOX_SIZE,  mPhysicsCommon, mPhysicsWorld, mMeshFolderPath);
		local box = Box(true,BOX_SIZE,self.world)
		table.insert(self.objects,box)
		table.insert(self.boxes,box)
	end

	--FLOOR
	self.floor = Box(true, FLOOR_SIZE,self.world);
	-- The floor must be a static rigid body
	self.floor.body:setType(rp3d.BodyType.STATIC);
	table.insert(self.objects,self.floor)


	--INIT POSITIONS
	local radius = 2.0
	for index,box in ipairs(self.boxes)do
		local i = index - 1
		local angle = i * 30
		local position = vmath.vector3(radius * math.cos(angle),10 + i * (BOX_SIZE.y + 0.3),0)
		box.body:setTransform({position = position ,quat = vmath.quat_rotation_z(0)})
	end
	self.floor.body:setTransform({position = vmath.vector3(0) ,quat = vmath.quat_rotation_z(0)})
		--[[// Gravity vector in the physics world

		// Create all the cubes of the scene
		for (int i=0; i<NB_CUBES; i++) {



		// Set the box color
		cube->setColor(mObjectColorDemo);
		cube->setSleepingColor(mSleepingColorDemo);

		// Change the material properties of the rigid body
		rp3d::Material& material = cube->getCollider()->getMaterial();
		material.setBounciness(rp3d::decimal(0.4));

		// Add the box the list of box in the scene
		mBoxes.push_back(cube);
		mPhysicsObjects.push_back(cube);
		}

		// ------------------------- FLOOR ----------------------- //

		// Create the floor
		mFloor = new Box(true, FLOOR_SIZE, mPhysicsCommon, mPhysicsWorld, mMeshFolderPath);
		mFloor->setColor(mFloorColorDemo);
		mFloor->setSleepingColor(mFloorColorDemo);

		// The floor must be a static rigid body
		mFloor->getRigidBody()->setType(rp3d::BodyType::STATIC);
		mPhysicsObjects.push_back(mFloor);
		createPhysicsWorld();
		initBodiesPositions();--]]
end

function init(self)
	create_physics(self)

	SCENE_HELPER.scene_new({
		name = "cubes",
		world = self.world
	})
end

function final(self)
	for _,obj in ipairs(self.objects)do
		obj:dispose()
	end
	self.objects = nil

	rp3d.destroyPhysicsWorld(self.world)
	-- self.world:Destroy()
	SCENE_HELPER.scene_final()
end



