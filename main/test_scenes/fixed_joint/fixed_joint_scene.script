local SCENE_HELPER = require "main.gui.scene_helper"
local MONARCH = require "monarch.monarch"
local Box = require "main.objects.box"
local Dumbbell = require "main.objects.dumbbell"
local Sphere = require "main.objects.sphere"
local Capsule = require "main.objects.capsules"
local ConvexMesh = require "main.objects.convex_mesh"
local ConcaveMesh = require "main.objects.concave_mesh"

local function create_physics(self)
	local settings = {
		gravity = vmath.vector3(0, -9.81, 0)
	}
	self.world = rp3d.createPhysicsWorld(settings)
	---@type GameBox[]
	self.objects = {}
	---@type GameBox[]
	self.boxes = {}

	self.joints = {}

	local box1 = Box(true, vmath.vector3(4, 4, 4), self.world);
	box1.body:setTransformPosition(vmath.vector3(0, 4, 0));
	box1.body:setType(rp3d.BodyType.STATIC);

	table.insert(self.objects, box1)

	local box2 = Box(true, vmath.vector3(4, 4, 4), self.world);
	box2.body:setTransformPosition(vmath.vector3(4, 8, 4));
	box2.body:setType(rp3d.BodyType.DYNAMIC);

	table.insert(self.objects, box2)

	local body1 = box1.body
	local body2 = box2.body
	local anchorPointWorldSpace1 = vmath.vector3(5, 7, 0);
	local jointInfo = rp3d.createFixedJointInfoWorldSpace(body1, body2, anchorPointWorldSpace1);
	jointInfo.isCollisionEnabled = false;
	local joint = self.world:createJoint(jointInfo)

end

function init(self)
	create_physics(self)

	--msg.post("main:/camera3d", "set_position", { position = vmath.vector3(-8, 15, 100) })

	SCENE_HELPER.scene_new({
		name = "Fixed Joint",
		world = self.world
	})
	--timer.delay(0.05,false,function()
	--	MONARCH.show(MONARCH.top(), { reload = true })
	--end)
end

function update(self, dt)
	SCENE_HELPER.update(dt)
	SCENE_HELPER.updatePhysics(dt, self.objects)
end

function final(self)
	for _, obj in ipairs(self.objects) do
		obj:dispose()
	end
	self.objects = nil

	rp3d.destroyPhysicsWorld(self.world)
	-- self.world:Destroy()
	--SCENE_HELPER.scene_final()
end



